{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","name","number","handleNameChange","handleNumberChange","type","Persons","personsToShow","deletePerson","map","person","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setPersonsToShow","newFilter","setFilter","newMessage","setNewMessage","useEffect","personService","initialPersons","console","log","event","target","regex","RegExp","filter","match","preventDefault","personToAdd","updatedPerson","found","length","window","confirm","returnedPerson","catch","error","setTimeout","concat","p","personId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4efafcc2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <div>\r\n      filter shown with <input value={value} onChange={onChange} />\r\n    </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({onSubmit, name, number, handleNameChange, handleNumberChange}) => (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={name} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number <input value={number} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({personsToShow, deletePerson}) => (\r\n    <div>\r\n      {personsToShow.map(person => <p key={person.number}>{person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button> </p>)}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, deletePerson, update}","import React from 'react'\r\n\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) return null\r\n\r\n    return (\r\n        <div className='message'> \r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [personsToShow, setPersonsToShow] = useState([])\r\n  const [newFilter, setFilter] = useState('')\r\n  const [newMessage, setNewMessage] = useState(null)\r\n\r\n  const hook = () => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        console.log(initialPersons)\r\n        setPersons(initialPersons)\r\n        setPersonsToShow(initialPersons)\r\n      })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n\r\n    const person = persons.filter((person) =>\r\n        person.name === newName\r\n    )\r\n\r\n    const personToAdd = person[0]\r\n    const updatedPerson = { ...personToAdd, number: newNumber }\r\n    \r\n    var found = false\r\n\r\n    if (person.length !== 0) {\r\n      found = true\r\n    }\r\n\r\n    if (found) {\r\n      if (window.confirm(`A person with the number ${person.number} already exists, replace this number with new one?`)){\r\n        personService\r\n          .update(updatedPerson.id, updatedPerson)\r\n          .then(returnedPerson => {\r\n          setPersons(persons.map(person => person.id !== personToAdd ? person : returnedPerson))\r\n          setNewMessage(`Person ${updatedPerson.name} has been updated`)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n            setNewMessage(`Person ${updatedPerson.name} has been already been deleted from the server`)\r\n          })\r\n          setTimeout(() => {\r\n            setNewMessage(null)\r\n          },5000)\r\n      }\r\n\r\n    }else{\r\n      const nameObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n        .create(nameObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setPersonsToShow(persons)\r\n          setNewMessage(`Person ${returnedPerson.name} has been added`)\r\n          setTimeout(()=>{\r\n            setNewMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n    const regex = new RegExp(newFilter, 'i')\r\n    const filteredPersons = () => persons.filter(person => person.name.match(regex))\r\n    setPersonsToShow(filteredPersons)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const person = persons.filter(p => p.id === id)\r\n  console.log(person)\r\n  const personId = person[0].id\r\n  if (window.confirm(`Are you sure you want to delete ${person[0].name}?`)) {\r\n    personService.deletePerson(personId)\r\n    setPersons(persons.filter(person => person.id !== personId))\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={newMessage} />\r\n      <Filter value={newFilter} onChange={handleFilterChange} />\r\n      <h3>Add New</h3>\r\n      <PersonForm onSubmit={addName} name={newName} handleNameChange={handleNameChange} number={newNumber} handleNumberChange={handleNumberChange}  />\r\n      <h3>Numbers</h3>\r\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}